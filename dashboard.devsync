#! /bin/bash
VERSION=1.0.7

# During development of the dashboard on a VM, this script syncs the
# contents of the working git directory to the target location on
# the VM and runs the configuration task for the client.

# Set up common functions and variables.
source $DIMS/bin/test_functions.sh

# Defaults for these exist in config files. Only specified
# ones that are needed.
export DASHBOARD_PUBLIC_HOST=${DASHBOARD_PUBLIC_HOST}
export DASHBOARD_PUBLIC_PORT=${DASHBOARD_PUBLIC_PORT}
export DASHBOARD_PUBLIC_PROTOCOL=${DASHBOARD_PUBLIC_PROTOCOL}

DATE=$(iso8601dateshort)
LOGFILE=$BASE-$DATE.log

DEST=${DEST:="/opt/dims/srv"}
SOURCE=${SOURCE:="$HOME"}
OWNER=${OWNER:="dims"}

sudo rsync -ah --exclude '.git' --exclude 'node_modules' --exclude 'public' --exclude 'logs' --exclude '.DS*' --exclude '*.css' --exclude 'bower_components' ${SOURCE}/dims-dashboard/ ${DEST}/dims-dashboard/
# If we want to mirror how actual install done - rsync the node_modules
# sudo rsync -ah --exclude '.git' --exclude 'public' --exclude 'logs' --exclude '.DS*' --exclude '*.css'  ${SOURCE}/dims-dashboard/ ${DEST}/dims-dashboard/
# So user running grunt can configure
sudo chown -R $USER:$USER ${DEST}/dims-dashboard
cd ${DEST}/dims-dashboard/client
# This is just for developing, so don't need to do a production build
# Only needed for client changes
if [ "$1" == "client" ]; then
  grunt dev-compile
fi
# Reset to owner
sudo chown -R $OWNER:$OWNER ${DEST}/dims-dashboard
